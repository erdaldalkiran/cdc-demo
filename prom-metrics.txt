# HELP kafka_connect_connect_metrics_failed_authentication_rate The number of connections with failed authentication per second (kafka.connect<type=connect-metrics, client-id=connect-1><>failed-authentication-rate)
# TYPE kafka_connect_connect_metrics_failed_authentication_rate untyped
kafka_connect_connect_metrics_failed_authentication_rate{client="connect-1",} 0.0
# HELP kafka_connect_connect_metrics_failed_reauthentication_rate The number of failed re-authentication of connections per second (kafka.connect<type=connect-metrics, client-id=connect-1><>failed-reauthentication-rate)
# TYPE kafka_connect_connect_metrics_failed_reauthentication_rate untyped
kafka_connect_connect_metrics_failed_reauthentication_rate{client="connect-1",} 0.0
# HELP kafka_connect_connect_worker_metrics_connector_count The number of connectors run in this worker. (kafka.connect<type=connect-worker-metrics><>connector-count)
# TYPE kafka_connect_connect_worker_metrics_connector_count untyped
kafka_connect_connect_worker_metrics_connector_count 2.0
# HELP kafka_connect_connect_metrics_request_rate The number of requests sent per second (kafka.connect<type=connect-metrics, client-id=connect-1><>request-rate)
# TYPE kafka_connect_connect_metrics_request_rate untyped
kafka_connect_connect_metrics_request_rate{client="connect-1",} 0.3600808797052876
# HELP kafka_connect_connect_metrics_successful_reauthentication_rate The number of successful re-authentication of connections per second (kafka.connect<type=connect-metrics, client-id=connect-1><>successful-reauthentication-rate)
# TYPE kafka_connect_connect_metrics_successful_reauthentication_rate untyped
kafka_connect_connect_metrics_successful_reauthentication_rate{client="connect-1",} 0.0
# HELP kafka_connect_connect_worker_metrics_task_startup_attempts_total The total number of task startups that this worker has attempted. (kafka.connect<type=connect-worker-metrics><>task-startup-attempts-total)
# TYPE kafka_connect_connect_worker_metrics_task_startup_attempts_total untyped
kafka_connect_connect_worker_metrics_task_startup_attempts_total 2.0
# HELP debezium_metrics_SnapshotDurationInSeconds SnapshotDurationInSeconds (debezium.postgres<type=connector-metrics, context=snapshot, server=counter><>SnapshotDurationInSeconds)
# TYPE debezium_metrics_SnapshotDurationInSeconds untyped
debezium_metrics_SnapshotDurationInSeconds{context="snapshot",name="counter",plugin="postgres",} 0.0
# HELP kafka_connect_connect_metrics_outgoing_byte_total The total number of outgoing bytes sent to all servers (kafka.connect<type=connect-metrics, client-id=connect-1><>outgoing-byte-total)
# TYPE kafka_connect_connect_metrics_outgoing_byte_total untyped
kafka_connect_connect_metrics_outgoing_byte_total{client="connect-1",} 24874.0
# HELP kafka_connect_connect_worker_metrics_task_count The number of tasks run in this worker. (kafka.connect<type=connect-worker-metrics><>task-count)
# TYPE kafka_connect_connect_worker_metrics_task_count untyped
kafka_connect_connect_worker_metrics_task_count 2.0
# HELP debezium_metrics_SnapshotCompleted SnapshotCompleted (debezium.postgres<type=connector-metrics, context=snapshot, server=counter><>SnapshotCompleted)
# TYPE debezium_metrics_SnapshotCompleted untyped
debezium_metrics_SnapshotCompleted{context="snapshot",name="counter",plugin="postgres",} 0.0
# HELP kafka_connect_connect_metrics_outgoing_byte_rate The number of outgoing bytes sent to all servers per second (kafka.connect<type=connect-metrics, client-id=connect-1><>outgoing-byte-rate)
# TYPE kafka_connect_connect_metrics_outgoing_byte_rate untyped
kafka_connect_connect_metrics_outgoing_byte_rate{client="connect-1",} 35.28792621111819
# HELP kafka_connect_connect_metrics_network_io_total The total number of network operations (reads or writes) on all connections (kafka.connect<type=connect-metrics, client-id=connect-1><>network-io-total)
# TYPE kafka_connect_connect_metrics_network_io_total untyped
kafka_connect_connect_metrics_network_io_total{client="connect-1",} 492.0
# HELP debezium_metrics_NumberOfCommittedTransactions NumberOfCommittedTransactions (debezium.postgres<type=connector-metrics, context=streaming, server=counter><>NumberOfCommittedTransactions)
# TYPE debezium_metrics_NumberOfCommittedTransactions untyped
debezium_metrics_NumberOfCommittedTransactions{context="streaming",name="counter",plugin="postgres",} 515.0
# HELP debezium_metrics_QueueTotalCapacity QueueTotalCapacity (debezium.postgres<type=connector-metrics, context=snapshot, server=counter><>QueueTotalCapacity)
# TYPE debezium_metrics_QueueTotalCapacity untyped
debezium_metrics_QueueTotalCapacity{context="snapshot",name="counter",plugin="postgres",} 8192.0
debezium_metrics_QueueTotalCapacity{context="streaming",name="counter",plugin="postgres",} 8192.0
# HELP kafka_connect_connect_metrics_connection_creation_total The total number of new connections established (kafka.connect<type=connect-metrics, client-id=connect-1><>connection-creation-total)
# TYPE kafka_connect_connect_metrics_connection_creation_total untyped
kafka_connect_connect_metrics_connection_creation_total{client="connect-1",} 3.0
# HELP kafka_connect_connect_metrics_response_rate The number of responses received per second (kafka.connect<type=connect-metrics, client-id=connect-1><>response-rate)
# TYPE kafka_connect_connect_metrics_response_rate untyped
kafka_connect_connect_metrics_response_rate{client="connect-1",} 0.36253776435045315
# HELP debezium_metrics_Connected Connected (debezium.postgres<type=connector-metrics, context=streaming, server=counter><>Connected)
# TYPE debezium_metrics_Connected untyped
debezium_metrics_Connected{context="streaming",name="counter",plugin="postgres",} 1.0
# HELP kafka_connect_connect_worker_metrics_task_startup_success_total The total number of task starts that succeeded. (kafka.connect<type=connect-worker-metrics><>task-startup-success-total)
# TYPE kafka_connect_connect_worker_metrics_task_startup_success_total untyped
kafka_connect_connect_worker_metrics_task_startup_success_total 2.0
# HELP debezium_metrics_SnapshotAborted SnapshotAborted (debezium.postgres<type=connector-metrics, context=snapshot, server=counter><>SnapshotAborted)
# TYPE debezium_metrics_SnapshotAborted untyped
debezium_metrics_SnapshotAborted{context="snapshot",name="counter",plugin="postgres",} 0.0
# HELP debezium_metrics_MilliSecondsBehindSource MilliSecondsBehindSource (debezium.postgres<type=connector-metrics, context=streaming, server=counter><>MilliSecondsBehindSource)
# TYPE debezium_metrics_MilliSecondsBehindSource untyped
debezium_metrics_MilliSecondsBehindSource{context="streaming",name="counter",plugin="postgres",} 300.0
# HELP kafka_connect_connect_metrics_request_total The total number of requests sent (kafka.connect<type=connect-metrics, client-id=connect-1><>request-total)
# TYPE kafka_connect_connect_metrics_request_total untyped
kafka_connect_connect_metrics_request_total{client="connect-1",} 246.0
# HELP kafka_connect_connect_metrics_iotime_total The total time the I/O thread spent doing I/O (kafka.connect<type=connect-metrics, client-id=connect-1><>iotime-total)
# TYPE kafka_connect_connect_metrics_iotime_total untyped
kafka_connect_connect_metrics_iotime_total{client="connect-1",} 1.44319952E8
# HELP kafka_connect_connect_metrics_io_waittime_total The total time the I/O thread spent waiting (kafka.connect<type=connect-metrics, client-id=connect-1><>io-waittime-total)
# TYPE kafka_connect_connect_metrics_io_waittime_total untyped
kafka_connect_connect_metrics_io_waittime_total{client="connect-1",} 6.05020128634E11
# HELP kafka_connect_connect_worker_metrics_connector_startup_success_total The total number of connector starts that succeeded. (kafka.connect<type=connect-worker-metrics><>connector-startup-success-total)
# TYPE kafka_connect_connect_worker_metrics_connector_startup_success_total untyped
kafka_connect_connect_worker_metrics_connector_startup_success_total 2.0
# HELP kafka_connect_connect_metrics_incoming_byte_total The total number of bytes read off all sockets (kafka.connect<type=connect-metrics, client-id=connect-1><>incoming-byte-total)
# TYPE kafka_connect_connect_metrics_incoming_byte_total untyped
kafka_connect_connect_metrics_incoming_byte_total{client="connect-1",} 32976.0
# HELP kafka_connect_connect_metrics_successful_authentication_total The total number of connections with successful authentication (kafka.connect<type=connect-metrics, client-id=connect-1><>successful-authentication-total)
# TYPE kafka_connect_connect_metrics_successful_authentication_total untyped
kafka_connect_connect_metrics_successful_authentication_total{client="connect-1",} 0.0
# HELP debezium_metrics_CurrentQueueSizeInBytes CurrentQueueSizeInBytes (debezium.postgres<type=connector-metrics, context=snapshot, server=counter><>CurrentQueueSizeInBytes)
# TYPE debezium_metrics_CurrentQueueSizeInBytes untyped
debezium_metrics_CurrentQueueSizeInBytes{context="snapshot",name="counter",plugin="postgres",} 0.0
debezium_metrics_CurrentQueueSizeInBytes{context="streaming",name="counter",plugin="postgres",} 0.0
# HELP kafka_connect_connect_metrics_successful_authentication_rate The number of connections with successful authentication per second (kafka.connect<type=connect-metrics, client-id=connect-1><>successful-authentication-rate)
# TYPE kafka_connect_connect_metrics_successful_authentication_rate untyped
kafka_connect_connect_metrics_successful_authentication_rate{client="connect-1",} 0.0
# HELP kafka_connect_connect_worker_metrics_task_startup_success_percentage The average percentage of this worker's tasks starts that succeeded. (kafka.connect<type=connect-worker-metrics><>task-startup-success-percentage)
# TYPE kafka_connect_connect_worker_metrics_task_startup_success_percentage untyped
kafka_connect_connect_worker_metrics_task_startup_success_percentage 0.0
# HELP kafka_connect_connect_metrics_connection_count The current number of active connections. (kafka.connect<type=connect-metrics, client-id=connect-1><>connection-count)
# TYPE kafka_connect_connect_metrics_connection_count untyped
kafka_connect_connect_metrics_connection_count{client="connect-1",} 2.0
# HELP kafka_connect_connect_metrics_select_rate The number of times the I/O layer checked for new I/O to perform per second (kafka.connect<type=connect-metrics, client-id=connect-1><>select-rate)
# TYPE kafka_connect_connect_metrics_select_rate untyped
kafka_connect_connect_metrics_select_rate{client="connect-1",} 67.54019654422245
# HELP kafka_connect_connect_metrics_successful_reauthentication_total The total number of successful re-authentication of connections (kafka.connect<type=connect-metrics, client-id=connect-1><>successful-reauthentication-total)
# TYPE kafka_connect_connect_metrics_successful_reauthentication_total untyped
kafka_connect_connect_metrics_successful_reauthentication_total{client="connect-1",} 0.0
# HELP kafka_connect_connect_metrics_request_size_max The maximum size of any request sent. (kafka.connect<type=connect-metrics, client-id=connect-1><>request-size-max)
# TYPE kafka_connect_connect_metrics_request_size_max untyped
kafka_connect_connect_metrics_request_size_max{client="connect-1",} 98.0
# HELP kafka_connect_connect_worker_metrics_connector_startup_failure_total The total number of connector starts that failed. (kafka.connect<type=connect-worker-metrics><>connector-startup-failure-total)
# TYPE kafka_connect_connect_worker_metrics_connector_startup_failure_total untyped
kafka_connect_connect_worker_metrics_connector_startup_failure_total 0.0
# HELP kafka_connect_connect_metrics_connection_close_total The total number of connections closed (kafka.connect<type=connect-metrics, client-id=connect-1><>connection-close-total)
# TYPE kafka_connect_connect_metrics_connection_close_total untyped
kafka_connect_connect_metrics_connection_close_total{client="connect-1",} 1.0
# HELP kafka_connect_connect_metrics_successful_authentication_no_reauth_total The total number of connections with successful authentication where the client does not support re-authentication (kafka.connect<type=connect-metrics, client-id=connect-1><>successful-authentication-no-reauth-total)
# TYPE kafka_connect_connect_metrics_successful_authentication_no_reauth_total untyped
kafka_connect_connect_metrics_successful_authentication_no_reauth_total{client="connect-1",} 0.0
# HELP kafka_connect_connect_metrics_incoming_byte_rate The number of bytes read off all sockets per second (kafka.connect<type=connect-metrics, client-id=connect-1><>incoming-byte-rate)
# TYPE kafka_connect_connect_metrics_incoming_byte_rate untyped
kafka_connect_connect_metrics_incoming_byte_rate{client="connect-1",} 5.80060422960725
# HELP kafka_connect_connect_worker_metrics_connector_startup_failure_percentage The average percentage of this worker's connectors starts that failed. (kafka.connect<type=connect-worker-metrics><>connector-startup-failure-percentage)
# TYPE kafka_connect_connect_worker_metrics_connector_startup_failure_percentage untyped
kafka_connect_connect_worker_metrics_connector_startup_failure_percentage 0.0
# HELP kafka_connect_connect_metrics_request_size_avg The average size of requests sent. (kafka.connect<type=connect-metrics, client-id=connect-1><>request-size-avg)
# TYPE kafka_connect_connect_metrics_request_size_avg untyped
kafka_connect_connect_metrics_request_size_avg{client="connect-1",} 98.0
# HELP kafka_connect_connect_worker_metrics_task_startup_failure_total The total number of task starts that failed. (kafka.connect<type=connect-worker-metrics><>task-startup-failure-total)
# TYPE kafka_connect_connect_worker_metrics_task_startup_failure_total untyped
kafka_connect_connect_worker_metrics_task_startup_failure_total 0.0
# HELP debezium_metrics_SnapshotRunning SnapshotRunning (debezium.postgres<type=connector-metrics, context=snapshot, server=counter><>SnapshotRunning)
# TYPE debezium_metrics_SnapshotRunning untyped
debezium_metrics_SnapshotRunning{context="snapshot",name="counter",plugin="postgres",} 0.0
# HELP kafka_connect_connect_metrics_reauthentication_latency_max The max latency observed due to re-authentication (kafka.connect<type=connect-metrics, client-id=connect-1><>reauthentication-latency-max)
# TYPE kafka_connect_connect_metrics_reauthentication_latency_max untyped
kafka_connect_connect_metrics_reauthentication_latency_max{client="connect-1",} NaN
# HELP debezium_metrics_NumberOfErroneousEvents NumberOfErroneousEvents (debezium.postgres<type=connector-metrics, context=snapshot, server=counter><>NumberOfErroneousEvents)
# TYPE debezium_metrics_NumberOfErroneousEvents untyped
debezium_metrics_NumberOfErroneousEvents{context="snapshot",name="counter",plugin="postgres",} 0.0
debezium_metrics_NumberOfErroneousEvents{context="streaming",name="counter",plugin="postgres",} 0.0
# HELP kafka_connect_connect_worker_metrics_connector_startup_attempts_total The total number of connector startups that this worker has attempted. (kafka.connect<type=connect-worker-metrics><>connector-startup-attempts-total)
# TYPE kafka_connect_connect_worker_metrics_connector_startup_attempts_total untyped
kafka_connect_connect_worker_metrics_connector_startup_attempts_total 2.0
# HELP kafka_connect_connect_metrics_connection_creation_rate The number of new connections established per second (kafka.connect<type=connect-metrics, client-id=connect-1><>connection-creation-rate)
# TYPE kafka_connect_connect_metrics_connection_creation_rate untyped
kafka_connect_connect_metrics_connection_creation_rate{client="connect-1",} 0.0
# HELP debezium_metrics_NumberOfEventsFiltered NumberOfEventsFiltered (debezium.postgres<type=connector-metrics, context=snapshot, server=counter><>NumberOfEventsFiltered)
# TYPE debezium_metrics_NumberOfEventsFiltered untyped
debezium_metrics_NumberOfEventsFiltered{context="snapshot",name="counter",plugin="postgres",} 0.0
debezium_metrics_NumberOfEventsFiltered{context="streaming",name="counter",plugin="postgres",} 0.0
# HELP kafka_connect_connect_metrics_io_time_ns_avg The average length of time for I/O per select call in nanoseconds. (kafka.connect<type=connect-metrics, client-id=connect-1><>io-time-ns-avg)
# TYPE kafka_connect_connect_metrics_io_time_ns_avg untyped
kafka_connect_connect_metrics_io_time_ns_avg{client="connect-1",} 2509.470196223621
# HELP kafka_connect_connect_metrics_network_io_rate The number of network operations (reads or writes) on all connections per second (kafka.connect<type=connect-metrics, client-id=connect-1><>network-io-rate)
# TYPE kafka_connect_connect_metrics_network_io_rate untyped
kafka_connect_connect_metrics_network_io_rate{client="connect-1",} 0.7201617594105753
# HELP kafka_connect_connect_metrics_io_ratio The fraction of time the I/O thread spent doing I/O (kafka.connect<type=connect-metrics, client-id=connect-1><>io-ratio)
# TYPE kafka_connect_connect_metrics_io_ratio untyped
kafka_connect_connect_metrics_io_ratio{client="connect-1",} 1.6949011027481183E-4
# HELP kafka_connect_connect_metrics_io_wait_time_ns_avg The average length of time the I/O thread spent waiting for a socket ready for reads or writes in nanoseconds. (kafka.connect<type=connect-metrics, client-id=connect-1><>io-wait-time-ns-avg)
# TYPE kafka_connect_connect_metrics_io_wait_time_ns_avg untyped
kafka_connect_connect_metrics_io_wait_time_ns_avg{client="connect-1",} 1.4794231870788597E7
# HELP kafka_connect_connect_metrics_reauthentication_latency_avg The average latency observed due to re-authentication (kafka.connect<type=connect-metrics, client-id=connect-1><>reauthentication-latency-avg)
# TYPE kafka_connect_connect_metrics_reauthentication_latency_avg untyped
kafka_connect_connect_metrics_reauthentication_latency_avg{client="connect-1",} NaN
# HELP debezium_metrics_MilliSecondsSinceLastEvent MilliSecondsSinceLastEvent (debezium.postgres<type=connector-metrics, context=snapshot, server=counter><>MilliSecondsSinceLastEvent)
# TYPE debezium_metrics_MilliSecondsSinceLastEvent untyped
debezium_metrics_MilliSecondsSinceLastEvent{context="snapshot",name="counter",plugin="postgres",} -1.0
debezium_metrics_MilliSecondsSinceLastEvent{context="streaming",name="counter",plugin="postgres",} 418432.0
# HELP kafka_connect_connect_metrics_connection_close_rate The number of connections closed per second (kafka.connect<type=connect-metrics, client-id=connect-1><>connection-close-rate)
# TYPE kafka_connect_connect_metrics_connection_close_rate untyped
kafka_connect_connect_metrics_connection_close_rate{client="connect-1",} 0.0
# HELP debezium_metrics_TotalNumberOfEventsSeen TotalNumberOfEventsSeen (debezium.postgres<type=connector-metrics, context=snapshot, server=counter><>TotalNumberOfEventsSeen)
# TYPE debezium_metrics_TotalNumberOfEventsSeen untyped
debezium_metrics_TotalNumberOfEventsSeen{context="snapshot",name="counter",plugin="postgres",} 0.0
debezium_metrics_TotalNumberOfEventsSeen{context="streaming",name="counter",plugin="postgres",} 515.0
# HELP kafka_connect_connect_worker_metrics_task_startup_failure_percentage The average percentage of this worker's tasks starts that failed. (kafka.connect<type=connect-worker-metrics><>task-startup-failure-percentage)
# TYPE kafka_connect_connect_worker_metrics_task_startup_failure_percentage untyped
kafka_connect_connect_worker_metrics_task_startup_failure_percentage 0.0
# HELP debezium_metrics_RemainingTableCount RemainingTableCount (debezium.postgres<type=connector-metrics, context=snapshot, server=counter><>RemainingTableCount)
# TYPE debezium_metrics_RemainingTableCount untyped
debezium_metrics_RemainingTableCount{context="snapshot",name="counter",plugin="postgres",} 0.0
# HELP debezium_metrics_MaxQueueSizeInBytes MaxQueueSizeInBytes (debezium.postgres<type=connector-metrics, context=snapshot, server=counter><>MaxQueueSizeInBytes)
# TYPE debezium_metrics_MaxQueueSizeInBytes untyped
debezium_metrics_MaxQueueSizeInBytes{context="snapshot",name="counter",plugin="postgres",} 0.0
debezium_metrics_MaxQueueSizeInBytes{context="streaming",name="counter",plugin="postgres",} 0.0
# HELP kafka_connect_connect_metrics_select_total The total number of times the I/O layer checked for new I/O to perform (kafka.connect<type=connect-metrics, client-id=connect-1><>select-total)
# TYPE kafka_connect_connect_metrics_select_total untyped
kafka_connect_connect_metrics_select_total{client="connect-1",} 36369.0
# HELP debezium_metrics_QueueRemainingCapacity QueueRemainingCapacity (debezium.postgres<type=connector-metrics, context=snapshot, server=counter><>QueueRemainingCapacity)
# TYPE debezium_metrics_QueueRemainingCapacity untyped
debezium_metrics_QueueRemainingCapacity{context="snapshot",name="counter",plugin="postgres",} 8192.0
debezium_metrics_QueueRemainingCapacity{context="streaming",name="counter",plugin="postgres",} 8192.0
# HELP kafka_connect_connect_metrics_failed_authentication_total The total number of connections with failed authentication (kafka.connect<type=connect-metrics, client-id=connect-1><>failed-authentication-total)
# TYPE kafka_connect_connect_metrics_failed_authentication_total untyped
kafka_connect_connect_metrics_failed_authentication_total{client="connect-1",} 0.0
# HELP debezium_metrics_TotalTableCount TotalTableCount (debezium.postgres<type=connector-metrics, context=snapshot, server=counter><>TotalTableCount)
# TYPE debezium_metrics_TotalTableCount untyped
debezium_metrics_TotalTableCount{context="snapshot",name="counter",plugin="postgres",} 0.0
# HELP kafka_connect_connect_metrics_response_total The total number of responses received (kafka.connect<type=connect-metrics, client-id=connect-1><>response-total)
# TYPE kafka_connect_connect_metrics_response_total untyped
kafka_connect_connect_metrics_response_total{client="connect-1",} 246.0
# HELP kafka_connect_connect_metrics_failed_reauthentication_total The total number of failed re-authentication of connections (kafka.connect<type=connect-metrics, client-id=connect-1><>failed-reauthentication-total)
# TYPE kafka_connect_connect_metrics_failed_reauthentication_total untyped
kafka_connect_connect_metrics_failed_reauthentication_total{client="connect-1",} 0.0
# HELP kafka_connect_connect_metrics_io_wait_ratio The fraction of time the I/O thread spent waiting (kafka.connect<type=connect-metrics, client-id=connect-1><>io-wait-ratio)
# TYPE kafka_connect_connect_metrics_io_wait_ratio untyped
kafka_connect_connect_metrics_io_wait_ratio{client="connect-1",} 0.9992053282738617
# HELP kafka_connect_connect_worker_metrics_connector_startup_success_percentage The average percentage of this worker's connectors starts that succeeded. (kafka.connect<type=connect-worker-metrics><>connector-startup-success-percentage)
# TYPE kafka_connect_connect_worker_metrics_connector_startup_success_percentage untyped
kafka_connect_connect_worker_metrics_connector_startup_success_percentage 0.0
# HELP jmx_scrape_duration_seconds Time this JMX scrape took, in seconds.
# TYPE jmx_scrape_duration_seconds gauge
jmx_scrape_duration_seconds 0.048047606
# HELP jmx_scrape_error Non-zero if this scrape failed.
# TYPE jmx_scrape_error gauge
jmx_scrape_error 0.0
# HELP jmx_scrape_cached_beans Number of beans with their matching rule cached
# TYPE jmx_scrape_cached_beans gauge
jmx_scrape_cached_beans 0.0
# HELP jmx_config_reload_failure_total Number of times configuration have failed to be reloaded.
# TYPE jmx_config_reload_failure_total counter
jmx_config_reload_failure_total 0.0
# HELP jvm_buffer_pool_used_bytes Used bytes of a given JVM buffer pool.
# TYPE jvm_buffer_pool_used_bytes gauge
jvm_buffer_pool_used_bytes{pool="mapped",} 0.0
jvm_buffer_pool_used_bytes{pool="direct",} 136039.0
# HELP jvm_buffer_pool_capacity_bytes Bytes capacity of a given JVM buffer pool.
# TYPE jvm_buffer_pool_capacity_bytes gauge
jvm_buffer_pool_capacity_bytes{pool="mapped",} 0.0
jvm_buffer_pool_capacity_bytes{pool="direct",} 136039.0
# HELP jvm_buffer_pool_used_buffers Used buffers of a given JVM buffer pool.
# TYPE jvm_buffer_pool_used_buffers gauge
jvm_buffer_pool_used_buffers{pool="mapped",} 0.0
jvm_buffer_pool_used_buffers{pool="direct",} 34.0
# HELP jvm_info VM version info
# TYPE jvm_info gauge
jvm_info{runtime="OpenJDK Runtime Environment",vendor="Oracle Corporation",version="11.0.8+10-LTS",} 1.0
# HELP jmx_exporter_build_info A metric with a constant '1' value labeled with the version of the JMX exporter.
# TYPE jmx_exporter_build_info gauge
jmx_exporter_build_info{version="0.15.0",name="jmx_prometheus_javaagent",} 1.0
# HELP process_cpu_seconds_total Total user and system CPU time spent in seconds.
# TYPE process_cpu_seconds_total counter
process_cpu_seconds_total 64.05
# HELP process_start_time_seconds Start time of the process since unix epoch in seconds.
# TYPE process_start_time_seconds gauge
process_start_time_seconds 1.621518768817E9
# HELP process_open_fds Number of open file descriptors.
# TYPE process_open_fds gauge
process_open_fds 247.0
# HELP process_max_fds Maximum number of open file descriptors.
# TYPE process_max_fds gauge
process_max_fds 1048576.0
# HELP process_virtual_memory_bytes Virtual memory size in bytes.
# TYPE process_virtual_memory_bytes gauge
process_virtual_memory_bytes 7.1139328E9
# HELP process_resident_memory_bytes Resident memory size in bytes.
# TYPE process_resident_memory_bytes gauge
process_resident_memory_bytes 9.61540096E8
# HELP jvm_memory_pool_allocated_bytes_total Total bytes allocated in a given JVM memory pool. Only updated after GC, not continuously.
# TYPE jvm_memory_pool_allocated_bytes_total counter
jvm_memory_pool_allocated_bytes_total{pool="CodeHeap 'profiled nmethods'",} 1.641792E7
jvm_memory_pool_allocated_bytes_total{pool="G1 Old Gen",} 4.4902488E7
jvm_memory_pool_allocated_bytes_total{pool="G1 Eden Space",} 2.864709632E9
jvm_memory_pool_allocated_bytes_total{pool="CodeHeap 'non-profiled nmethods'",} 6287744.0
jvm_memory_pool_allocated_bytes_total{pool="G1 Survivor Space",} 2.5165824E7
jvm_memory_pool_allocated_bytes_total{pool="Compressed Class Space",} 6836976.0
jvm_memory_pool_allocated_bytes_total{pool="Metaspace",} 5.5246112E7
jvm_memory_pool_allocated_bytes_total{pool="CodeHeap 'non-nmethods'",} 1368960.0
# HELP jvm_gc_collection_seconds Time spent in a given JVM garbage collector in seconds.
# TYPE jvm_gc_collection_seconds summary
jvm_gc_collection_seconds_count{gc="G1 Young Generation",} 51.0
jvm_gc_collection_seconds_sum{gc="G1 Young Generation",} 1.121
jvm_gc_collection_seconds_count{gc="G1 Old Generation",} 0.0
jvm_gc_collection_seconds_sum{gc="G1 Old Generation",} 0.0
# HELP jmx_config_reload_success_total Number of times configuration have successfully been reloaded.
# TYPE jmx_config_reload_success_total counter
jmx_config_reload_success_total 0.0
# HELP jvm_threads_current Current thread count of a JVM
# TYPE jvm_threads_current gauge
jvm_threads_current 46.0
# HELP jvm_threads_daemon Daemon thread count of a JVM
# TYPE jvm_threads_daemon gauge
jvm_threads_daemon 18.0
# HELP jvm_threads_peak Peak thread count of a JVM
# TYPE jvm_threads_peak gauge
jvm_threads_peak 48.0
# HELP jvm_threads_started_total Started thread count of a JVM
# TYPE jvm_threads_started_total counter
jvm_threads_started_total 115.0
# HELP jvm_threads_deadlocked Cycles of JVM-threads that are in deadlock waiting to acquire object monitors or ownable synchronizers
# TYPE jvm_threads_deadlocked gauge
jvm_threads_deadlocked 0.0
# HELP jvm_threads_deadlocked_monitor Cycles of JVM-threads that are in deadlock waiting to acquire object monitors
# TYPE jvm_threads_deadlocked_monitor gauge
jvm_threads_deadlocked_monitor 0.0
# HELP jvm_threads_state Current count of threads by state
# TYPE jvm_threads_state gauge
jvm_threads_state{state="BLOCKED",} 0.0
jvm_threads_state{state="TERMINATED",} 0.0
jvm_threads_state{state="NEW",} 0.0
jvm_threads_state{state="WAITING",} 13.0
jvm_threads_state{state="RUNNABLE",} 17.0
jvm_threads_state{state="TIMED_WAITING",} 16.0
# HELP jvm_classes_loaded The number of classes that are currently loaded in the JVM
# TYPE jvm_classes_loaded gauge
jvm_classes_loaded 11724.0
# HELP jvm_classes_loaded_total The total number of classes that have been loaded since the JVM has started execution
# TYPE jvm_classes_loaded_total counter
jvm_classes_loaded_total 11733.0
# HELP jvm_classes_unloaded_total The total number of classes that have been unloaded since the JVM has started execution
# TYPE jvm_classes_unloaded_total counter
jvm_classes_unloaded_total 9.0
# HELP jvm_memory_bytes_used Used bytes of a given JVM memory area.
# TYPE jvm_memory_bytes_used gauge
jvm_memory_bytes_used{area="heap",} 1.06895408E8
jvm_memory_bytes_used{area="nonheap",} 8.2175496E7
# HELP jvm_memory_bytes_committed Committed (bytes) of a given JVM memory area.
# TYPE jvm_memory_bytes_committed gauge
jvm_memory_bytes_committed{area="heap",} 1.056964608E9
jvm_memory_bytes_committed{area="nonheap",} 9.0619904E7
# HELP jvm_memory_bytes_max Max (bytes) of a given JVM memory area.
# TYPE jvm_memory_bytes_max gauge
jvm_memory_bytes_max{area="heap",} 2.147483648E9
jvm_memory_bytes_max{area="nonheap",} -1.0
# HELP jvm_memory_bytes_init Initial bytes of a given JVM memory area.
# TYPE jvm_memory_bytes_init gauge
jvm_memory_bytes_init{area="heap",} 2.68435456E8
jvm_memory_bytes_init{area="nonheap",} 7667712.0
# HELP jvm_memory_pool_bytes_used Used bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_bytes_used gauge
jvm_memory_pool_bytes_used{pool="CodeHeap 'non-nmethods'",} 1314176.0
jvm_memory_pool_bytes_used{pool="Metaspace",} 5.5254424E7
jvm_memory_pool_bytes_used{pool="CodeHeap 'profiled nmethods'",} 1.3241344E7
jvm_memory_pool_bytes_used{pool="Compressed Class Space",} 6836976.0
jvm_memory_pool_bytes_used{pool="G1 Eden Space",} 6.7108864E7
jvm_memory_pool_bytes_used{pool="G1 Old Gen",} 3.8737968E7
jvm_memory_pool_bytes_used{pool="G1 Survivor Space",} 1048576.0
jvm_memory_pool_bytes_used{pool="CodeHeap 'non-profiled nmethods'",} 5528576.0
# HELP jvm_memory_pool_bytes_committed Committed bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_bytes_committed gauge
jvm_memory_pool_bytes_committed{pool="CodeHeap 'non-nmethods'",} 2555904.0
jvm_memory_pool_bytes_committed{pool="Metaspace",} 5.7720832E7
jvm_memory_pool_bytes_committed{pool="CodeHeap 'profiled nmethods'",} 1.6318464E7
jvm_memory_pool_bytes_committed{pool="Compressed Class Space",} 7733248.0
jvm_memory_pool_bytes_committed{pool="G1 Eden Space",} 8.7031808E7
jvm_memory_pool_bytes_committed{pool="G1 Old Gen",} 9.68884224E8
jvm_memory_pool_bytes_committed{pool="G1 Survivor Space",} 1048576.0
jvm_memory_pool_bytes_committed{pool="CodeHeap 'non-profiled nmethods'",} 6291456.0
# HELP jvm_memory_pool_bytes_max Max bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_bytes_max gauge
jvm_memory_pool_bytes_max{pool="CodeHeap 'non-nmethods'",} 5832704.0
jvm_memory_pool_bytes_max{pool="Metaspace",} -1.0
jvm_memory_pool_bytes_max{pool="CodeHeap 'profiled nmethods'",} 1.22912768E8
jvm_memory_pool_bytes_max{pool="Compressed Class Space",} 1.073741824E9
jvm_memory_pool_bytes_max{pool="G1 Eden Space",} -1.0
jvm_memory_pool_bytes_max{pool="G1 Old Gen",} 2.147483648E9
jvm_memory_pool_bytes_max{pool="G1 Survivor Space",} -1.0
jvm_memory_pool_bytes_max{pool="CodeHeap 'non-profiled nmethods'",} 1.22912768E8
# HELP jvm_memory_pool_bytes_init Initial bytes of a given JVM memory pool.
# TYPE jvm_memory_pool_bytes_init gauge
jvm_memory_pool_bytes_init{pool="CodeHeap 'non-nmethods'",} 2555904.0
jvm_memory_pool_bytes_init{pool="Metaspace",} 0.0
jvm_memory_pool_bytes_init{pool="CodeHeap 'profiled nmethods'",} 2555904.0
jvm_memory_pool_bytes_init{pool="Compressed Class Space",} 0.0
jvm_memory_pool_bytes_init{pool="G1 Eden Space",} 1.3631488E7
jvm_memory_pool_bytes_init{pool="G1 Old Gen",} 2.54803968E8
jvm_memory_pool_bytes_init{pool="G1 Survivor Space",} 0.0
jvm_memory_pool_bytes_init{pool="CodeHeap 'non-profiled nmethods'",} 2555904.0
# HELP jmx_config_reload_failure_created Number of times configuration have failed to be reloaded.
# TYPE jmx_config_reload_failure_created gauge
jmx_config_reload_failure_created 1.621518769798E9
# HELP jmx_config_reload_success_created Number of times configuration have successfully been reloaded.
# TYPE jmx_config_reload_success_created gauge
jmx_config_reload_success_created 1.621518769779E9
# HELP jvm_memory_pool_allocated_bytes_created Total bytes allocated in a given JVM memory pool. Only updated after GC, not continuously.
# TYPE jvm_memory_pool_allocated_bytes_created gauge
jvm_memory_pool_allocated_bytes_created{pool="CodeHeap 'profiled nmethods'",} 1.621518772133E9
jvm_memory_pool_allocated_bytes_created{pool="G1 Old Gen",} 1.621518772133E9
jvm_memory_pool_allocated_bytes_created{pool="G1 Eden Space",} 1.621518772133E9
jvm_memory_pool_allocated_bytes_created{pool="CodeHeap 'non-profiled nmethods'",} 1.621518772133E9
jvm_memory_pool_allocated_bytes_created{pool="G1 Survivor Space",} 1.621518772133E9
jvm_memory_pool_allocated_bytes_created{pool="Compressed Class Space",} 1.621518772133E9
jvm_memory_pool_allocated_bytes_created{pool="Metaspace",} 1.621518772133E9
jvm_memory_pool_allocated_bytes_created{pool="CodeHeap 'non-nmethods'",} 1.621518772133E9